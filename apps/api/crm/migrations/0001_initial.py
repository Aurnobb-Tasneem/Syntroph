# Generated by Django 5.2.7 on 2025-11-01 20:49

import crm.models.user
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="User",
            fields=[
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        error_messages={
                            "unique": "A user with that username already exists."
                        },
                        help_text="Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        max_length=150,
                        unique=True,
                        validators=[
                            django.contrib.auth.validators.UnicodeUsernameValidator()
                        ],
                        verbose_name="username",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        help_text="Unique identifier for this user",
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        help_text="User's email address (must be unique within tenant)",
                        max_length=254,
                        unique=True,
                    ),
                ),
                (
                    "role",
                    models.CharField(
                        choices=[
                            ("owner", "Owner"),
                            ("admin", "Administrator"),
                            ("manager", "Manager"),
                            ("salesperson", "Salesperson"),
                        ],
                        default="salesperson",
                        help_text="User's role within the organization",
                        max_length=20,
                    ),
                ),
                (
                    "phone",
                    models.CharField(
                        blank=True, help_text="User's phone number", max_length=20
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="Admin who created this user account",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="created_users",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "User",
                "verbose_name_plural": "Users",
                "db_table": "users",
                "ordering": ["-date_joined"],
            },
            managers=[
                ("objects", crm.models.user.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="Contact",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        help_text="Unique identifier for this contact",
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "first_name",
                    models.CharField(help_text="Contact's first name", max_length=100),
                ),
                (
                    "last_name",
                    models.CharField(help_text="Contact's last name", max_length=100),
                ),
                (
                    "email",
                    models.EmailField(
                        help_text="Primary email address", max_length=254, unique=True
                    ),
                ),
                (
                    "phone",
                    models.CharField(
                        blank=True,
                        help_text="Primary phone number",
                        max_length=50,
                        null=True,
                    ),
                ),
                (
                    "mobile",
                    models.CharField(
                        blank=True,
                        help_text="Mobile phone number",
                        max_length=50,
                        null=True,
                    ),
                ),
                (
                    "job_title",
                    models.CharField(
                        blank=True,
                        help_text="Job title (e.g., 'CEO', 'Marketing Manager')",
                        max_length=200,
                        null=True,
                    ),
                ),
                (
                    "lifecycle_stage",
                    models.CharField(
                        choices=[
                            ("subscriber", "Subscriber"),
                            ("lead", "Lead"),
                            ("marketing_qualified", "Marketing Qualified Lead (MQL)"),
                            ("sales_qualified", "Sales Qualified Lead (SQL)"),
                            ("opportunity", "Opportunity"),
                            ("customer", "Customer"),
                            ("evangelist", "Evangelist"),
                            ("other", "Other"),
                        ],
                        default="lead",
                        help_text="Where this contact is in the sales process",
                        max_length=50,
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Is this contact active? Inactive contacts are hidden from most views",
                    ),
                ),
                (
                    "address_line1",
                    models.CharField(
                        blank=True,
                        help_text="Street address",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "address_line2",
                    models.CharField(
                        blank=True,
                        help_text="Apartment, suite, etc.",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "city",
                    models.CharField(
                        blank=True, help_text="City", max_length=100, null=True
                    ),
                ),
                (
                    "state",
                    models.CharField(
                        blank=True,
                        help_text="State/Province",
                        max_length=100,
                        null=True,
                    ),
                ),
                (
                    "postal_code",
                    models.CharField(
                        blank=True,
                        help_text="ZIP/Postal code",
                        max_length=20,
                        null=True,
                    ),
                ),
                (
                    "country",
                    models.CharField(
                        blank=True, help_text="Country", max_length=100, null=True
                    ),
                ),
                (
                    "linkedin_url",
                    models.URLField(
                        blank=True, help_text="LinkedIn profile URL", null=True
                    ),
                ),
                (
                    "twitter_handle",
                    models.CharField(
                        blank=True,
                        help_text="Twitter/X handle (without @)",
                        max_length=100,
                        null=True,
                    ),
                ),
                (
                    "website",
                    models.URLField(
                        blank=True, help_text="Personal website", null=True
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True,
                        help_text="General notes about this contact",
                        null=True,
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, help_text="When this contact was created"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True, help_text="When this contact was last updated"
                    ),
                ),
                (
                    "last_contacted",
                    models.DateTimeField(
                        blank=True,
                        help_text="When we last contacted this person",
                        null=True,
                    ),
                ),
                (
                    "lead_source",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("website", "Website"),
                            ("referral", "Referral"),
                            ("linkedin", "LinkedIn"),
                            ("email_campaign", "Email Campaign"),
                            ("event", "Event/Conference"),
                            ("cold_outreach", "Cold Outreach"),
                            ("partner", "Partner"),
                            ("other", "Other"),
                        ],
                        help_text="How did this contact find us?",
                        max_length=100,
                        null=True,
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        help_text="User who owns/manages this contact",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="owned_contacts",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Contact",
                "verbose_name_plural": "Contacts",
                "db_table": "contacts",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="Organization",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        help_text="Unique identifier for this organization",
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(help_text="Company name", max_length=255)),
                (
                    "domain",
                    models.CharField(
                        blank=True,
                        help_text="Company website domain (e.g., 'acme.com')",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "industry",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("technology", "Technology"),
                            ("finance", "Finance"),
                            ("healthcare", "Healthcare"),
                            ("manufacturing", "Manufacturing"),
                            ("retail", "Retail"),
                            ("education", "Education"),
                            ("real_estate", "Real Estate"),
                            ("consulting", "Consulting"),
                            ("media", "Media & Entertainment"),
                            ("transportation", "Transportation"),
                            ("energy", "Energy"),
                            ("telecommunications", "Telecommunications"),
                            ("hospitality", "Hospitality"),
                            ("other", "Other"),
                        ],
                        help_text="Company industry",
                        max_length=50,
                        null=True,
                    ),
                ),
                (
                    "employee_count",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("1-10", "1-10 employees"),
                            ("11-50", "11-50 employees"),
                            ("51-200", "51-200 employees"),
                            ("201-500", "201-500 employees"),
                            ("501-1000", "501-1000 employees"),
                            ("1001-5000", "1001-5000 employees"),
                            ("5001+", "5001+ employees"),
                        ],
                        help_text="Number of employees",
                        max_length=20,
                        null=True,
                    ),
                ),
                (
                    "annual_revenue",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Annual revenue in USD",
                        max_digits=15,
                        null=True,
                    ),
                ),
                (
                    "phone",
                    models.CharField(
                        blank=True,
                        help_text="Main phone number",
                        max_length=50,
                        null=True,
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True,
                        help_text="General contact email",
                        max_length=254,
                        null=True,
                    ),
                ),
                (
                    "website",
                    models.URLField(blank=True, help_text="Company website", null=True),
                ),
                (
                    "address_line1",
                    models.CharField(
                        blank=True,
                        help_text="Street address",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "address_line2",
                    models.CharField(
                        blank=True,
                        help_text="Suite, floor, etc.",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "city",
                    models.CharField(
                        blank=True, help_text="City", max_length=100, null=True
                    ),
                ),
                (
                    "state",
                    models.CharField(
                        blank=True,
                        help_text="State/Province",
                        max_length=100,
                        null=True,
                    ),
                ),
                (
                    "postal_code",
                    models.CharField(
                        blank=True,
                        help_text="ZIP/Postal code",
                        max_length=20,
                        null=True,
                    ),
                ),
                (
                    "country",
                    models.CharField(
                        blank=True, help_text="Country", max_length=100, null=True
                    ),
                ),
                (
                    "lifecycle_stage",
                    models.CharField(
                        choices=[
                            ("lead", "Lead"),
                            ("qualified", "Qualified"),
                            ("opportunity", "Opportunity"),
                            ("customer", "Customer"),
                            ("evangelist", "Evangelist"),
                            ("other", "Other"),
                        ],
                        default="lead",
                        help_text="Where this organization is in the sales process",
                        max_length=50,
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True, help_text="Is this organization active?"
                    ),
                ),
                (
                    "linkedin_url",
                    models.URLField(
                        blank=True, help_text="LinkedIn company page", null=True
                    ),
                ),
                (
                    "twitter_handle",
                    models.CharField(
                        blank=True,
                        help_text="Twitter/X handle (without @)",
                        max_length=100,
                        null=True,
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True,
                        help_text="General notes about this organization",
                        null=True,
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True,
                        help_text="When this organization was created",
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True,
                        help_text="When this organization was last updated",
                    ),
                ),
                (
                    "last_contacted",
                    models.DateTimeField(
                        blank=True,
                        help_text="When we last contacted this organization",
                        null=True,
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        help_text="User who owns/manages this organization",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="owned_organizations",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Organization",
                "verbose_name_plural": "Organizations",
                "db_table": "organizations",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="Deal",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        help_text="Unique identifier for this deal",
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="Deal name (e.g., 'Enterprise License Q4 2025')",
                        max_length=255,
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True,
                        help_text="Detailed description of the deal",
                        null=True,
                    ),
                ),
                (
                    "amount",
                    models.DecimalField(
                        decimal_places=2, help_text="Deal value in USD", max_digits=15
                    ),
                ),
                (
                    "currency",
                    models.CharField(
                        default="USD",
                        help_text="Currency code (USD, EUR, GBP, etc.)",
                        max_length=3,
                    ),
                ),
                (
                    "stage",
                    models.CharField(
                        choices=[
                            ("lead", "Lead"),
                            ("qualified", "Qualified"),
                            ("meeting_scheduled", "Meeting Scheduled"),
                            ("proposal_sent", "Proposal Sent"),
                            ("negotiation", "Negotiation"),
                            ("closed_won", "Closed Won"),
                            ("closed_lost", "Closed Lost"),
                        ],
                        default="lead",
                        help_text="Current stage in the sales pipeline",
                        max_length=50,
                    ),
                ),
                (
                    "probability",
                    models.IntegerField(
                        default=0, help_text="Win probability (0-100%)"
                    ),
                ),
                (
                    "expected_close_date",
                    models.DateField(
                        blank=True,
                        help_text="When we expect to close this deal",
                        null=True,
                    ),
                ),
                (
                    "actual_close_date",
                    models.DateField(
                        blank=True,
                        help_text="When the deal was actually closed",
                        null=True,
                    ),
                ),
                (
                    "loss_reason",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("price", "Price Too High"),
                            ("competitor", "Lost to Competitor"),
                            ("timing", "Bad Timing"),
                            ("budget", "No Budget"),
                            ("no_decision", "No Decision"),
                            ("requirements", "Requirements Not Met"),
                            ("other", "Other"),
                        ],
                        help_text="Why was this deal lost?",
                        max_length=50,
                        null=True,
                    ),
                ),
                (
                    "loss_reason_detail",
                    models.TextField(
                        blank=True,
                        help_text="Additional details about why deal was lost",
                        null=True,
                    ),
                ),
                (
                    "lead_source",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("website", "Website"),
                            ("referral", "Referral"),
                            ("linkedin", "LinkedIn"),
                            ("email_campaign", "Email Campaign"),
                            ("event", "Event/Conference"),
                            ("cold_outreach", "Cold Outreach"),
                            ("partner", "Partner"),
                            ("inbound", "Inbound"),
                            ("other", "Other"),
                        ],
                        help_text="How did this opportunity originate?",
                        max_length=100,
                        null=True,
                    ),
                ),
                (
                    "next_step",
                    models.TextField(
                        blank=True,
                        help_text="What's the next action for this deal?",
                        null=True,
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, help_text="When this deal was created"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True, help_text="When this deal was last updated"
                    ),
                ),
                (
                    "contact",
                    models.ForeignKey(
                        blank=True,
                        help_text="Primary contact for this deal",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="deals",
                        to="crm.contact",
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        help_text="Sales rep who owns this deal",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="owned_deals",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "organization",
                    models.ForeignKey(
                        help_text="Company this deal is with",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="deals",
                        to="crm.organization",
                    ),
                ),
            ],
            options={
                "verbose_name": "Deal",
                "verbose_name_plural": "Deals",
                "db_table": "deals",
                "ordering": ["-created_at"],
            },
        ),
        migrations.AddField(
            model_name="contact",
            name="organization",
            field=models.ForeignKey(
                blank=True,
                help_text="Company this contact works for",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="contacts",
                to="crm.organization",
            ),
        ),
        migrations.AddIndex(
            model_name="user",
            index=models.Index(fields=["email"], name="users_email_4b85f2_idx"),
        ),
        migrations.AddIndex(
            model_name="user",
            index=models.Index(fields=["role"], name="users_role_0ace22_idx"),
        ),
        migrations.AddIndex(
            model_name="organization",
            index=models.Index(fields=["name"], name="organizatio_name_5cd1d4_idx"),
        ),
        migrations.AddIndex(
            model_name="organization",
            index=models.Index(fields=["domain"], name="organizatio_domain_edc3a8_idx"),
        ),
        migrations.AddIndex(
            model_name="organization",
            index=models.Index(
                fields=["industry"], name="organizatio_industr_24ff5e_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="organization",
            index=models.Index(
                fields=["lifecycle_stage"], name="organizatio_lifecyc_0711d1_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="organization",
            index=models.Index(fields=["owner"], name="organizatio_owner_i_0051c7_idx"),
        ),
        migrations.AddIndex(
            model_name="organization",
            index=models.Index(
                fields=["-created_at"], name="organizatio_created_7f4ee3_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="deal",
            index=models.Index(fields=["stage"], name="deals_stage_e4369d_idx"),
        ),
        migrations.AddIndex(
            model_name="deal",
            index=models.Index(
                fields=["organization"], name="deals_organiz_969d95_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="deal",
            index=models.Index(fields=["owner"], name="deals_owner_i_e6076f_idx"),
        ),
        migrations.AddIndex(
            model_name="deal",
            index=models.Index(
                fields=["expected_close_date"], name="deals_expecte_53925b_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="deal",
            index=models.Index(fields=["-amount"], name="deals_amount_729edc_idx"),
        ),
        migrations.AddIndex(
            model_name="deal",
            index=models.Index(fields=["-created_at"], name="deals_created_34f492_idx"),
        ),
        migrations.AddIndex(
            model_name="contact",
            index=models.Index(fields=["email"], name="contacts_email_2eb381_idx"),
        ),
        migrations.AddIndex(
            model_name="contact",
            index=models.Index(
                fields=["last_name", "first_name"], name="contacts_last_na_ace8a0_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="contact",
            index=models.Index(
                fields=["lifecycle_stage"], name="contacts_lifecyc_c88ad0_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="contact",
            index=models.Index(fields=["owner"], name="contacts_owner_i_f913b7_idx"),
        ),
        migrations.AddIndex(
            model_name="contact",
            index=models.Index(
                fields=["-created_at"], name="contacts_created_994491_idx"
            ),
        ),
    ]
